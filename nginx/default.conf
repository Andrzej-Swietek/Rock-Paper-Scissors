upstream socketio_backend {
    least_conn;  # Use least-connections load balancing algorithm
    server backend:3030;
    server backend:3030;
}

server {
    listen 8080;

    location /users/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_bind $server_addr;
         proxy_pass http://users:3000/;
#         proxy_pass https://newsletter.dev01.nonprod.a.winning.com.au:3001/;
    }

    # Node js backend 
    location /socketio/ {
        proxy_pass http://socketio_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # gRPC AI Container
    location /ai/ {
        grpc_pass grpc://ai:50051;
        grpc_set_header Host $host;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_pass http://frontend:3000/;
    }
}
